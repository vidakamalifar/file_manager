package com.malwarebytes.filemanager.utils;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Build;
import android.text.format.DateFormat;

import androidx.annotation.RequiresApi;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.attribute.BasicFileAttributes;
import java.nio.file.attribute.FileTime;
import java.text.SimpleDateFormat;

public class FileUtil {

    public static String convertDateToString(long date) {
        return DateFormat.format("dd.MM.yyyy HH:mm", date).toString();
    }

    @RequiresApi(api = Build.VERSION_CODES.O)
    public static String convertFileTimeToString(Path path) {
        BasicFileAttributes attr = null;
        try {
            attr = Files.readAttributes(path, BasicFileAttributes.class);
        } catch (IOException e) {
            e.printStackTrace();
        }
        FileTime date = attr != null ? attr.creationTime() : null;
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy HH:mm");
        return  dateFormat.format(date.toMillis());
    }

    public static String convertSize(String path) {
        File file = new File(path);
        int fileSize = Integer.parseInt(String.valueOf(file.length()));
        return String.valueOf(fileSize);
    }

    public static Bitmap getImage(String path) {
        return BitmapFactory.decodeFile(path);
    }

    public static final String[] imageFileExtensions = new String[]{
            "png", "jpg", "jpeg", "gif"
    };

    public static boolean isFileHasImage(File file) {
        for (String extension : imageFileExtensions) {
            if (file.getName().toLowerCase().endsWith(extension)) {
                return true;
            }
        }
        return false;
    }

    public static String getSize(long size) {
        long unit = 1024;
        String fileSize = "";
        double kb = size / unit;
        double mb = kb / unit;
        double gb = mb / unit;
        if (size < unit) {
            fileSize = size + " Bytes";
        } else if (size < unit * unit) {
            fileSize = String.format("%.2f", kb) + " KB";
        } else if (size < unit * unit * unit) {
            fileSize = String.format("%.2f", mb) + " MB";
        } else if (size < unit * unit * unit * unit) {
            fileSize = String.format("%.2f", gb) + " GB";
        }
        return fileSize;
    }
}
